#!/usr/bin/env python3
import sys
import logging
import getpass
from collections import deque
import json
import os

with open("/TDIAFS/etc/actualUser","r") as file:
    datauser = json.load(file)
    file.close()
user = datauser["Utilisateur"]
userd=datauser["Repertoire"]
user_directory="/home/{}".format(userd)
logging.basicConfig(filename="/TDIAFS/var/logging", level=logging.DEBUG,format="%(name)s | %(levelname)s | %(asctime)s | %(message)s")
logger = logging.getLogger(user)

def search_file(filename):
    for i, j, k in os.walk(user_directory):
        if filename in k:
            return os.path.join(i,filename)
    return None
def fct_h(file_path, num_lines=10):
    try:
        with open(file_path, 'r') as file:
            recent_lines = deque(maxlen=num_lines)
            for line in file:
                recent_lines.append(line.rstrip('\n'))

            for recent_line in recent_lines:
                print(recent_line)
            logger.info(f"Affichage du {num_lines} derniers lignes du fichier {file_path}")
    except FileNotFoundError:
        print(f"The file '{file_path}' was not found.")
        logger.error(f"le fichier {file_path} est non trouvable.")
    except Exception as e:
        print(f" un erreur s'est produit")
        logger.error("Error")
if len(sys.argv) < 2:
    print("Usage: python script.py <file> [num_lines]")
    logger.error("nombre d'arguments est invalide.")
    sys.exit(1)

file_path = sys.argv[1]
num_lines = int(sys.argv[2]) if len(sys.argv) > 2 else 10
logger.info(f"Affichage du {num_lines} derniers  du fichier {file_path}")
if search_file(file_path.split('/')[-1]):
    fct_h(search_file(file_path.split('/')[-1]), num_lines)
else:
    print("Ce fichier n'existe pas ")
    logger.error(f"le fichier {file_path} est non trouvable.")
